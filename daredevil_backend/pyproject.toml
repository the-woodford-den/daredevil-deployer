[project]
name = "daredevil-backend"
version = "0.1.0"
description = "Backend for Daredevil Deployer"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.17.0",
    "asgi-lifespan>=2.1.0",
    "asyncpg>=0.30.0",
    "authlib>=1.6.3",
    "cryptography>=45.0.7",
    "fastapi[standard]>=0.116.1",
    "greenlet>=3.2.4",
    "httpx>=0.28.1",
    "hypercorn[uvloop]>=0.17.3",
    "logfire[asyncpg,fastapi]>=4.6.0",
    "opentelemetry-instrumentation-asyncpg>=0.57b0",
    "pydantic-settings>=2.10.1",
    "pyjwt>=2.10.1",
    "sqlmodel>=0.0.24",
]

[dependency-groups]
dev = [
    "coverage>=7.10.6",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "rich>=14.1.0",
    "ruff>=0.13.0",
]

[pytest]
mock_use_standalone_module = true

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["routes*", "models*", "configs*", "dbs*"]
exclude = ["tests*", "keys*", "bruno*"]

[tool.pytest.ini.options]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
    ]
testpaths = "tests"
pythonpath = ["."]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

markers = [
    "smoke: subset of tests",
    "exception: check for expected exceptions"
]

