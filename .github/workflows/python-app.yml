# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

env:
  LOGFIRE_IGNORE_NO_CONFIG: 1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgresql
          POSTGRES_DB: daredevil_test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - uses: actions/checkout@v4
    - name: Copy .env.test 
      working-directory: ./daredevil_backend 
      run: |
        cp .env.test .env
    - name: Install Pip
      working-directory: ./daredevil_backend 
      run: |
        python -m pip install --upgrade pip
    - name: Purge pip cache
      working-directory: ./daredevil_backend 
      run: |
        pip cache purge
    - name: Install Dependencies
      working-directory: ./daredevil_backend 
      run: |
        pip install -r requirements.txt
    - name: Lint with Ruff
      working-directory: ./daredevil_backend 
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff check --select=E9,F63,F7,F82 --statistics
        # exit-zero treats all errors as warnings.
        ruff check --select=C901 -e --statistics
    - name: Executing pytest
      working-directory: ./daredevil_backend 
      run: |
        pytest -v
